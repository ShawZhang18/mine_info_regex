from docx import Document
from win32com import client as wc

#doc文件另存为docx
# word = wc.Dispatch("Word.Application")
# doc = word.Documents.Open(r"D:\workspace\python_zyy\word\苗某王超故意伤害罪故意伤害罪刑事一审刑事判决书.doc")
# word_text = doc.Content.Text
# print(word_text)

import re

#被告人年龄
被告人年份汉_1 = r'被告.{0,16}[男女].{0,10}出生.{0,8}([一二三四五六七八九十零〇]{4,4})年[一二三四五六七八九十零〇]{1,2}月[一二三四五六七八九十零〇]{1,3}日'
被告人年份汉_2 = r'被告.{0,16}[男女].{0,10}([一二三四五六七八九十零〇]{4,4})年[一二三四五六七八九十零〇]{1,2}月[一二三四五六七八九十零〇]{1,3}日'
patter_nianfen_1 = r'被告.{0,16}[男女].{0,10}出生.{0,8}([0-9]{4,4})年[0-9]*月[0-9]*日'
patter_nianfen_2 = r'被告.{0,16}[男女].{0,10}([0-9]{4,4})年[0-9]*月[0-9]*日'

#伤害结果
# 伤害结果_死亡 = r'(死亡).*判决如下'
# 伤害结果_重伤 = r'(重伤(一|二)级).*判决如下'
# 伤害结果_轻伤 = r'(轻伤(一|二)级).*判决如下'
# 伤害结果 = r'(([轻|重]伤[一|二]级)|死亡).*判决如下'
# 判决如下之前的句子
伤害结果_死亡 = r'(死亡)'
伤害结果_重伤 = r'(重伤(一|二)级)'
伤害结果_轻伤 = r'(轻伤(一|二)级)'


#如果有则填有，如果无则填无
# 未赔偿 = r'本院认为.*?未赔偿.*判决如下'
# 有赔偿 = r'本院认为.*?(已赔偿|积极赔偿|主动赔偿|代为赔偿|赔偿了).*判决如下'
# 赔偿_从轻 = r'本院认为.*?赔偿.{0,15}可.{0,4}从轻.*判决如下'
#本院认为之后、判决如下之前
未赔偿 = r'未赔偿'
有赔偿 = r'(已赔偿|积极赔偿|主动赔偿|代为赔偿|赔偿了|预交|代.*赔偿)'
赔偿_从轻 = r'赔偿.*(从轻|和解|谅解|予以|从宽)'

#如果有则填数额，如果无则填未说明
def chinese2digits(uchars_chinese):
    common_used_numerals_tmp = {'〇':0, '零': 0, '一': 1, '二': 2, '两': 2, '三': 3, '四': 4, '五': 5, '六': 6, '七': 7, '八': 8,
                                '九': 9, '十': 10, '百': 100, '千': 1000, '万': 10000, '亿': 100000000}
    common_used_numerals = common_used_numerals_tmp
    total = 0
    r = 1  # 表示单位：个十百千...
    for i in range(len(uchars_chinese) - 1, -1, -1):
        val = common_used_numerals.get(uchars_chinese[i])
        if val >= 10 and i == 0:  # 应对 十三 十四 十*之类
            if val > r:
                r = val
                total = total + val
            else:
                r = r * val
                # total =total + r * x
        elif val >= 10:
            if val > r:
                r = val
            else:
                r = r * val
        else:
            total = total + r * val
    return total

# 输入可能是数字，可能是汉字，可能是None，统一转成阿拉伯数字
def getDigits(input):
    if input == None:
        return 0
    elif input[0] in [str(i) for i in range(10)]:
        return int (input)
    else:
        return chinese2digits(input)

# # 赔偿数额
# 赔偿数额合计汉 = r'本院认为.*?赔偿(.*?)合计([零一二三四五六七八九点千百万]{3,20})元([零一二三四五六七八九]角)?'
# 赔偿数额汉 = r'本院认为.*?赔偿(.*?)([零一二三四五六七八九点千百万]{3,20})元([零一二三四五六七八九]角)?'
#
# 赔偿数额合计 = r'本院认为.*?赔偿.*?合计([0-9]{2,}.[0-9]{2,2})元'
# 赔偿数额 = r'本院认为.*?赔偿.*?([0-9]{2,}.[0-9]{2,2})元'
# 本院认为之后、判决如下之前
赔偿数额合计汉 = r'赔偿(.*?)合计([零一二三四五六七八九点千百万]{3,20})元([零一二三四五六七八九]角)?'
赔偿数额汉 = r'赔偿(.*?)([零一二三四五六七八九点千百万]{3,20})元([零一二三四五六七八九]角)?'

赔偿数额合计 = r'赔偿.*?合计([0-9]{2,}.[0-9]{2,2})元'
赔偿数额 = r'赔偿.*?([0-9]{2,}.[0-9]{2,2})元'

#悔罪态度和表现
悔罪态度 = r'悔罪.{0,5}好'
#谅解
谅解 = r'谅解'
#初犯偶犯
# 初犯偶犯 = r'(初犯|偶犯|无[\u4e00-\u9fa5]{0,10}前科)'
初犯偶犯 = r'(初犯|偶犯|无.{0,4}前科|没.{0,5}前科)'
#累犯或者有前科,两个结合判断,to do 有***前科中间会有标点符号？
累犯 = r'(曾犯|有.{0,10}前科|累.{0.5}犯)'  # 有.*前科   要先排除   没有.*前科
#邻里关系和民间矛盾
邻里关系 = r'(琐事|争执|互相推搡|纠纷|口角|争吵|对峙|冲突|厮打|互相推搡|相互殴打|互殴|相互辱骂)'
#持械
持械 = r'(棍|刀|器具|匕首|凶器)'
#手段残忍
残忍 = r'(残忍|情节恶劣)'
# 自首
自首_不认定 = r'自首.{0,20}(不予|不符)'
自首 = r'自首'
# 坦白
坦白_不认定 = r'(坦白|如实供述).*(不予|不符)'
坦白 = r'(坦白|如实供述)'
# 认罪认罚
认罪_不认定 = r'(认罪|认罚).*(不予|不符)'
认罪 = r'(认罪|认罚)'
#正当防卫
正当防卫_防卫过当_不认定 = r'(正当防卫|防卫过当).{0,20}(不予|不符)'
正当防卫_防卫过当 = r'(正当防卫|防卫过当)'
#被害人过错
被害人过错_不认定 = r'(原告|被害人)[\u4e00-\u9fa5]{0,8}(过错|责任|过失).{0,20}(不予|不符)'
被害人过错 = r'(原告|被害人)[\u4e00-\u9fa5]{0,8}(过错|责任|过失)'

###判决如下之后，一整段
#刑罚情况
有期徒刑_年_月 = r'判(处|决).{0,5}(有期徒刑|拘役)[\u4e00-\u9fa5]{0,4}?' \
           r'([0-9]*[一二三四五六七八九十]{1,2})年[\u4e00-\u9fa5]{0,2}?' \
           r'(([0-9]*[一二三四五六七八九十]{0,2})个?月)?.*如不服'
有期徒刑_only月 = r'判(处|决).{0,5}(有期徒刑|拘役).{0,5}?([0-9]*[一二三四五六七八九十]{0,3})[个]?月.*(如不服|终审判决)'
死刑 = r'死刑.*(如不服|终审判决)'
无期徒刑 = r'无期徒刑.*(如不服|终审判决)'
#缓刑
缓刑 = r'(缓刑|缓期).*(如不服|终审判决)'

list_result_ming = ['案例名','1伤害结果','2被害人人数','3有无赔偿','4赔偿数额','5是否本人赔偿',
                    '6赔偿时间','7悔罪态度和表现','8谅解','9被告人年龄','10初犯偶犯',
                    '11累犯或者有前科','12邻里关系和民间矛盾','13持械','14手段残忍','15正当防卫或者防卫过当',
                    '16被害人过错','17自首（自动投案）','18坦白（如实供述）', '19立功', '20认罪认罚',
                    '21刑罚情况(月)', '22缓刑']
